{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"CS50P"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"lectures/012/","text":"Lecture 0 - CS50P Concepts Functions Bugs Variables Comments Pseudocode (\u4f2a\u4ee3\u7801\uff0c 'sju:d\u0259\u028a\u02cck\u0259\u028ad , where p is not pronounced) Parameters and arguments. Param s are variables can be passed; Arg s are params that are passed to a function s; Mostly they are the same concept. str + can join strings; print = print(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False) : print can have many args (e.g. string s) passed; sep means the seperator of passed string s are ; The end of the line will add a default character \\n ;` It will be written to a special file, Standard Output ; The buffer will not be flushed, similar to fprintf in C without fflush(stdout); ' and \" are both acceptable f\"{}\" format Method strip() : str_var = str_var.strip() will remove \" redundant \" s (only space s beginning and ending with, no deletion in the middle). Method title() : str_var = str_var.title() Methods can be used together. Just append more. int 1+2 = 3 , while \"1\"+\"2\" = \"12\" int(str) can transfer a text integer str to a real int float A float is a float . x = float ( input ()) # input 999 y = float ( input ()) # input 1 print ( f \" { z : , } ) will return 1,000 and it is still indeed a fload. No need of 999.0 and 1.0 def - define Functions No need to define the return value of function, and also for params. Just def hello(name) rather than int hello (char *name) . Like C++ , each param can have default value. e.g. def hello(to=\"world\") Scope is the extension that params function, that is one need to distinguish the difference between real parameters, form parameters, and values and know their scope of action.","title":"Lecture 0&1&2"},{"location":"lectures/012/#lecture-0-cs50p","text":"","title":"Lecture 0 - CS50P"},{"location":"lectures/012/#concepts","text":"Functions Bugs Variables Comments Pseudocode (\u4f2a\u4ee3\u7801\uff0c 'sju:d\u0259\u028a\u02cck\u0259\u028ad , where p is not pronounced) Parameters and arguments. Param s are variables can be passed; Arg s are params that are passed to a function s; Mostly they are the same concept.","title":"Concepts"},{"location":"lectures/012/#str","text":"+ can join strings; print = print(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False) : print can have many args (e.g. string s) passed; sep means the seperator of passed string s are ; The end of the line will add a default character \\n ;` It will be written to a special file, Standard Output ; The buffer will not be flushed, similar to fprintf in C without fflush(stdout); ' and \" are both acceptable f\"{}\" format Method strip() : str_var = str_var.strip() will remove \" redundant \" s (only space s beginning and ending with, no deletion in the middle). Method title() : str_var = str_var.title() Methods can be used together. Just append more.","title":"str"},{"location":"lectures/012/#int","text":"1+2 = 3 , while \"1\"+\"2\" = \"12\" int(str) can transfer a text integer str to a real int","title":"int"},{"location":"lectures/012/#float","text":"A float is a float . x = float ( input ()) # input 999 y = float ( input ()) # input 1 print ( f \" { z : , } ) will return 1,000 and it is still indeed a fload. No need of 999.0 and 1.0","title":"float"},{"location":"lectures/012/#def-define-functions","text":"No need to define the return value of function, and also for params. Just def hello(name) rather than int hello (char *name) . Like C++ , each param can have default value. e.g. def hello(to=\"world\") Scope is the extension that params function, that is one need to distinguish the difference between real parameters, form parameters, and values and know their scope of action.","title":"def - define Functions"}]}